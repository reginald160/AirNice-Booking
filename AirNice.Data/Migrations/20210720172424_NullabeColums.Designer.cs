// <auto-generated />
using System;
using AirNice.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirNice.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210720172424_NullabeColums")]
    partial class NullabeColums
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AirNice.Models.Models.AdditionalUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imageurl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("RoleId");

                    b.ToTable("AdditionalUsers");
                });

            modelBuilder.Entity("AirNice.Models.Models.AirLinesEnquiry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AirLinesEnquiryType")
                        .HasColumnType("int");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.ToTable("AirLinesEnquiries");
                });

            modelBuilder.Entity("AirNice.Models.Models.AirPort", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("AirPort");
                });

            modelBuilder.Entity("AirNice.Models.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProfiled")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("AirNice.Models.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BookingType")
                        .HasColumnType("int");

                    b.Property<string>("BookingTypeToDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("FlightID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfAdult")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfInfant")
                        .HasColumnType("int");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TripeType")
                        .HasColumnType("int");

                    b.Property<string>("TripeTypeToDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("FlightID");

                    b.HasIndex("PassengerId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("AirNice.Models.Models.BookingEnquiry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BookingEnquiryType")
                        .HasColumnType("int");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.ToTable("BookingEnquiries");
                });

            modelBuilder.Entity("AirNice.Models.Models.CoreProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProfiled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("picture")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("RoleId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("AirNice.Models.Models.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("AirNice.Models.Models.Flight", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArrivalID")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("ArrivateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DepartureDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("DepartureID")
                        .HasColumnType("int");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("FlightCategory")
                        .HasColumnType("int");

                    b.Property<string>("FlightCategoryToDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<int?>("PlaneID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ArrivalID");

                    b.HasIndex("CreateById");

                    b.HasIndex("DepartureID");

                    b.HasIndex("EditedById");

                    b.HasIndex("PlaneID");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("AirNice.Models.Models.NumberSequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<int>("LastNumber")
                        .HasColumnType("int");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberSequenceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.ToTable("NumberSequences");
                });

            modelBuilder.Entity("AirNice.Models.Models.PassengerTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateIssueOrExpiry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("IDCardOrPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PassengerTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlaceIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("PassengerTypeId");

                    b.HasIndex("TicketId");

                    b.ToTable("passengerTicket");
                });

            modelBuilder.Entity("AirNice.Models.Models.PassengerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.ToTable("PassengerType");
                });

            modelBuilder.Entity("AirNice.Models.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("AirNice.Models.Models.Plane", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Airline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<int?>("SeatMapID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("SeatMapID");

                    b.ToTable("Plane");
                });

            modelBuilder.Entity("AirNice.Models.Models.PlaneAirport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirportID")
                        .HasColumnType("int");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DepartureOrArrival")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<int>("PlaneID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AirportID");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("PlaneID");

                    b.ToTable("PlaneAirport");
                });

            modelBuilder.Entity("AirNice.Models.Models.PlaneSeatClass", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("PlaneID")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SeatClassID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("PlaneID");

                    b.HasIndex("SeatClassID");

                    b.ToTable("PlaneSeatClass");
                });

            modelBuilder.Entity("AirNice.Models.Models.SeatClass", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.ToTable("SeatClass");
                });

            modelBuilder.Entity("AirNice.Models.Models.SeatMap", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Columns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RowWithoutSeat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.ToTable("SeatMap");
                });

            modelBuilder.Entity("AirNice.Models.Models.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PassengerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TicketClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("PassengerId");

                    b.HasIndex("TicketClassId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("AirNice.Models.Models.TicketClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TicketClassType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("PassengerId");

                    b.ToTable("TicketClass");
                });

            modelBuilder.Entity("AirNice.Models.Models.TicketFlight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FlightID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("RoundTrip")
                        .HasColumnType("bit");

                    b.Property<string>("SeatCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("FlightID");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketFlight");
                });

            modelBuilder.Entity("AirNice.Models.Models.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNewRecord")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProfiled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("EditedById");

                    b.HasIndex("UserId");

                    b.ToTable("Profiles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UserProfile");
                });

            modelBuilder.Entity("AirNice.Models.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AirNice.Models.Models.Employee", b =>
                {
                    b.HasBaseType("AirNice.Models.Models.UserProfile");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEmployment")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasResigned")
                        .HasColumnType("bit");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("AirNice.Models.Models.Passenger", b =>
                {
                    b.HasBaseType("AirNice.Models.Models.UserProfile");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateIssueOrExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Passenger");
                });

            modelBuilder.Entity("AirNice.Models.Models.AdditionalUser", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AirNice.Models.Models.AirLinesEnquiry", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");
                });

            modelBuilder.Entity("AirNice.Models.Models.AirPort", b =>
                {
                    b.HasOne("AirNice.Models.Models.Country", "Country")
                        .WithMany("Airports")
                        .HasForeignKey("CountryID");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AirNice.Models.Models.Booking", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightID");

                    b.HasOne("AirNice.Models.Models.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("AirNice.Models.Models.BookingEnquiry", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");
                });

            modelBuilder.Entity("AirNice.Models.Models.CoreProfile", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AirNice.Models.Models.Flight", b =>
                {
                    b.HasOne("AirNice.Models.Models.AirPort", "Arrival")
                        .WithMany()
                        .HasForeignKey("ArrivalID");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.AirPort", "Departure")
                        .WithMany()
                        .HasForeignKey("DepartureID");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.Plane", "Plane")
                        .WithMany("Flights")
                        .HasForeignKey("PlaneID");

                    b.Navigation("Arrival");

                    b.Navigation("CreatedBy");

                    b.Navigation("Departure");

                    b.Navigation("EdityBy");

                    b.Navigation("Plane");
                });

            modelBuilder.Entity("AirNice.Models.Models.NumberSequence", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");
                });

            modelBuilder.Entity("AirNice.Models.Models.PassengerTicket", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.PassengerType", "PassengerType")
                        .WithMany("PassengerTickets")
                        .HasForeignKey("PassengerTypeId");

                    b.HasOne("AirNice.Models.Models.Ticket", "Ticket")
                        .WithMany("PassengerTickets")
                        .HasForeignKey("TicketId");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("PassengerType");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("AirNice.Models.Models.PassengerType", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");
                });

            modelBuilder.Entity("AirNice.Models.Models.Permission", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AirNice.Models.Models.Plane", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.SeatMap", "SeatMap")
                        .WithMany("Planes")
                        .HasForeignKey("SeatMapID");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("SeatMap");
                });

            modelBuilder.Entity("AirNice.Models.Models.PlaneAirport", b =>
                {
                    b.HasOne("AirNice.Models.Models.AirPort", "Airport")
                        .WithMany("PlaneAirports")
                        .HasForeignKey("AirportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.Plane", "Plane")
                        .WithMany("PlaneAirports")
                        .HasForeignKey("PlaneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("Plane");
                });

            modelBuilder.Entity("AirNice.Models.Models.PlaneSeatClass", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.Plane", "Plane")
                        .WithMany("PlaneSeatClasses")
                        .HasForeignKey("PlaneID");

                    b.HasOne("AirNice.Models.Models.SeatClass", "SeatClass")
                        .WithMany("PlaneSeatClasses")
                        .HasForeignKey("SeatClassID");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("Plane");

                    b.Navigation("SeatClass");
                });

            modelBuilder.Entity("AirNice.Models.Models.SeatClass", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");
                });

            modelBuilder.Entity("AirNice.Models.Models.SeatMap", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");
                });

            modelBuilder.Entity("AirNice.Models.Models.Ticket", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId");

                    b.HasOne("AirNice.Models.Models.TicketClass", "TicketClass")
                        .WithMany()
                        .HasForeignKey("TicketClassId");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("Passenger");

                    b.Navigation("TicketClass");
                });

            modelBuilder.Entity("AirNice.Models.Models.TicketClass", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("AirNice.Models.Models.TicketFlight", b =>
                {
                    b.HasOne("AirNice.Models.Models.Booking", null)
                        .WithMany("TicketFlights")
                        .HasForeignKey("BookingId");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.Flight", "Flight")
                        .WithMany("TicketFlights")
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirNice.Models.Models.Ticket", "Ticket")
                        .WithMany("TicketFlights")
                        .HasForeignKey("TicketId");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("Flight");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("AirNice.Models.Models.UserProfile", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "EdityBy")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("AirNice.Models.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CreatedBy");

                    b.Navigation("EdityBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirNice.Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AirNice.Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AirNice.Models.Models.AirPort", b =>
                {
                    b.Navigation("PlaneAirports");
                });

            modelBuilder.Entity("AirNice.Models.Models.Booking", b =>
                {
                    b.Navigation("TicketFlights");
                });

            modelBuilder.Entity("AirNice.Models.Models.Country", b =>
                {
                    b.Navigation("Airports");
                });

            modelBuilder.Entity("AirNice.Models.Models.Flight", b =>
                {
                    b.Navigation("TicketFlights");
                });

            modelBuilder.Entity("AirNice.Models.Models.PassengerType", b =>
                {
                    b.Navigation("PassengerTickets");
                });

            modelBuilder.Entity("AirNice.Models.Models.Plane", b =>
                {
                    b.Navigation("Flights");

                    b.Navigation("PlaneAirports");

                    b.Navigation("PlaneSeatClasses");
                });

            modelBuilder.Entity("AirNice.Models.Models.SeatClass", b =>
                {
                    b.Navigation("PlaneSeatClasses");
                });

            modelBuilder.Entity("AirNice.Models.Models.SeatMap", b =>
                {
                    b.Navigation("Planes");
                });

            modelBuilder.Entity("AirNice.Models.Models.Ticket", b =>
                {
                    b.Navigation("PassengerTickets");

                    b.Navigation("TicketFlights");
                });

            modelBuilder.Entity("AirNice.Models.Models.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
